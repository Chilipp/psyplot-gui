language: generic
env:
  global:
    - secure: uVa4t/sEiCblQbSzzyamO21prHyZWJqDQJ1+f5IAe+5jRPChl/tLt1n8Bu4t+w56FSX1ejmnG6Ho+z10HV/j8ANno21uv7mlw7zfbqzYYnJjlaxCMNMs+GyaEKWkoFZZN96pb2fOwl0D3HEVSD+7FyDwOBWRZVlFXbOKpa6PYFWwm+6Zequpq3ARjn26emAsk8aBHbK5xrMLbfR6M3jzW7RAYobHmgwmHqa+SwOXJvvHdsR6tbCvY4dLRh5CiwXRPa9BNuFGtopjKiBvSrdGLLvTGN9Uxa9ewn7qDRbuZz9pKS7IdKZhQUSrL2xn6tFS4TWq8t56VUuFwKDcR7/KM+P549ZDvJxXUZaczfWFKjD3+KjnZ9d9U5gPwBJ5EY9W9MD9juAL1w1sn8pzPa8qBhzPea1Iecp0vyTytwUWtkUsGeo47oEPcxSpvKxkN50EoRDzWBKJ9dDwKvkgBFMef82n6OaQbvZ7uqOONd4pQtpz2/NSw2xbPNVGWXsh1Wq/81kQ5kv7SHgzMpT1/PzJBZzt1E4cggUtTjAr8Oxe/rJtb9GR07nMSABacq0aJN06qN60ajY7OYQHCH/jtKOYAzq1OdhFEBFDXLoP/6P84aARjxZ27R7MZZsKxCOKRcuGLwGes/LWZzpzjaH3kQMuyzQqZVS3d/rIwStnyNaXOMg=
matrix:
  include:
    - env:
        - PYTHON_VERSION=2.7
        - QT_VERSION=4
      os: linux
    - env:
        - PYTHON_VERSION=3.5
        - QT_VERSION=4
      os: linux
    - env:
        - PYTHON_VERSION=3.5
        - QT_VERSION=5
      os: linux
    - env:
        - PYTHON_VERSION=3.6
        - QT_VERSION=4
      os: linux
    - env:
        - PYTHON_VERSION=3.6
        - QT_VERSION=5
      os: linux
    - env:
        - PYTHON_VERSION=3.6
        - QT_VERSION=5
      os: osx
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - libstdc++6
install:
  # Save the token to a local variable
  - CONDA_TOKEN_SAVE=$CONDA_REPO_TOKEN
  - unset CONDA_REPO_TOKEN
  # select the os name for the conda installer
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        OS_NAME=MacOSX;
    else
        OS_NAME=Linux;
    fi
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
    else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
    fi
  - 'echo "backend : module://psyplot_gui.backend" > matplotlibrc'
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build
  # Useful for debugging any issues with conda
  - conda info -a

  - 'ENVKEY=py"${PYTHON_VERSION}"_qt"${QT_VERSION}"'

  - conda env create -f tests/envs/environment_$ENVKEY.yml
  - source activate psyplot_gui_$ENVKEY
  # install pyqt5 via pip because the conda version does not have
  # QtWebEngineWidgets
  - if [[ $QT_VERSION == 5 ]]; then
      pip install pyqt5;
    fi
  # checkout the current psyplot version via git
  - git clone "https://github.com/Chilipp/psyplot.git" -b $TRAVIS_BRANCH || git clone "https://github.com/Chilipp/psyplot.git"
  - cd psyplot && python setup.py install && cd .. && rm -rf psyplot
  # use the branch from psy-simple
  - git clone "https://github.com/Chilipp/psy-simple.git" -b $TRAVIS_BRANCH || git clone "https://github.com/Chilipp/psy-simple.git"
  - cd psy-simple && python setup.py install && cd .. && rm -rf psy-simple
  # install the test plugin
  - cd tests/test_plugin && python setup.py install && cd ../../
  # install the rest
  - pip install coveralls
  - python setup.py install
  # prepare the conda receipt
  - python recipe_from_setup.py . ci/conda_recipe
  - conda env export -n psyplot_gui_$ENVKEY
  # print versions of all the important requirements
  - psyplot -aV
  # restore the conda token
  - if [[ $TRAVIS_TAG != "" ]]; then
      export CONDA_REPO_TOKEN=$CONDA_TOKEN_SAVE;
    fi

before_script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
        export "DISPLAY=:99.0";
        sh -e /etc/init.d/xvfb start;
        sleep 3;
    fi

script:
  - coverage run --source=psyplot_gui setup.py test -a "-vs"
  - conda build ci/conda_recipe --no-test

after_success:
  coveralls

before_deploy:
  - export BUILDS=`conda build --output ci/conda_recipe
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      mkdir builds;
      conda convert -p linux-32 -o builds $BUILDS;
      export BUILDS=$BUILDS $(ls builds/*/*.bz2);
    fi

deploy:
  - provider: script
    script: ci/deploy_anaconda.sh
    skip_cleanup: true
    on:
      tags: true
