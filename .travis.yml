language: generic
sudo: false # use container based build

# set clone depth to false to make sure that conda build can write the
# correct GIT_BUILD_STR
git:
  depth: false

env:
    matrix:
        # python 3.8
        - PYTHON_VERSION=3.8 QT_VERSION=5 DEPLOY_CONDA=true
        - PYTHON_VERSION=3.8 USE_PIP=true
        # python 3.7
        - PYTHON_VERSION=3.7 QT_VERSION=5 DEPLOY_CONDA=true
    global:
        - secure: "ra6jCfg7U1XTyeJS3J9KfY1/mPwGnjrnHO0ANG54Bk29TCl46LgChdCgjjz7fysS8CUfq4QS4Y1LrVFA6eK+JSqVS3LGJ1QZxBO3NTIPe/1WuIc3rmNpNDrvtTuncM6IN6fDfOCR2FCA4WipH3JnXjNkz+5rwgWg3ynf9KrSZhlLDdAxqO6phHXK99qOrN3sZCxnlg69iqPTv9aZkC/2RTrZ4fMuqc6zGHLL8rrQ/w93nEd7DP5vYlam0a1QfIXuR01a0C3y2D6LaVY5uXzTFIKCKFJmB9OuEazNMaxUhBbXdRt0eQAw9mGonMFhRnUiEFV8N1aoDyFu0t8YLWpIn3EAzpN0OJtpK5A8hKvoFSKyjbnu/1JLRR+Hsg7ufVT8KErxInge/GO5ugDOHcufFVv1mdysUQm7LndFt1nX0FbeUT6fYKIB3yLH6U3vNrgy+yrWynHXFMfL7ClI7yaRfXYGku4RNZZocIGErxaVIV7ArOAMs0YwabROChQSHO/M85u+eOi9qXNJ1Jst7xT3gXkCwXC1vTMqe6x6j4RlWedvYHLaAANhXyOQYgLxl6f2XotQDZzA/+OODeivyTJ/lr4aq1L+fi7sPruiBYQ7+a3ZAnc9U6zXdFrq4K2/+7DQXs9BRKQguxMEAo9FToHB8zNF5I8Sr/P7BmZIseby1xg="

os:
    - linux
    - osx

services:
    - xvfb

matrix:
    allow_failures:
        - env: PYTHON_VERSION=3.8 USE_PIP=true

before_install:
    - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then export DEPLOY_CONDA=false; fi
    # Remove homebrew.
    - |
      if [[ $TRAVIS_OS_NAME == "osx" ]]; then
          echo ""
          echo "Removing homebrew from Travis CI to avoid conflicts."
          curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
          chmod +x ~/uninstall_homebrew
          ~/uninstall_homebrew -fq
          rm ~/uninstall_homebrew
      fi
    # define functions to unset and reset encrypted variables
    - function unset_secure {
          CONDA_TOKEN_SAVE=$CONDA_REPO_TOKEN;
          unset CONDA_REPO_TOKEN;
          }
    - function reset_secure {
          export CONDA_REPO_TOKEN=$CONDA_TOKEN_SAVE;
          }
    - unset_secure
    # increase open files limit
    - ulimit -a
    - ulimit -Sn 10000
    - ulimit -a
      # select the os name for the conda installer
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          OS_NAME=MacOSX;
      else
          OS_NAME=Linux;
      fi
    # Install Miniconda.
    - |
      echo ""
      echo "Installing a fresh version of Miniconda."
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-latest-${OS_NAME}-x86_64.sh"
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -bp $HOME/miniconda3
    - source $HOME/miniconda3/bin/activate root
    - hash -r
    - reset_secure

before_script:
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
          export "DISPLAY=:99.0";
          sh -e /etc/init.d/xvfb start;
          sleep 3;
      fi

install:
    # unset the global CONDA_REPO_TOKEN variable because it is not needed
    # during the tests. This decreases the vulnerability
    - unset_secure
    - |
        echo ""
        echo "Configuring conda."
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda config --add channels chilipp
        conda update -q conda
        conda install conda-build anaconda-client conda-verify
    - if [[ $TRAVIS_TAG == "" ]]; then
        export GIT_BRANCH=$TRAVIS_BRANCH;
        conda config --add channels chilipp/label/${TRAVIS_BRANCH};
      fi
    - python ci/setup_append.py ci/conda-recipe pyqt=${QT_VERSION}
    - if [[ $USE_PIP == true ]]; then
        python -m pip install . -r ci/requirements.txt;
      fi
    - conda info -a
    - conda list
    - reset_secure
script:
    - unset_secure
    # install conda
    - if [[ $USE_PIP == true ]]; then
          pytest -v --cov=psyplot-gui && codecov;
      else
          conda build ci/conda-recipe --python $PYTHON_VERSION;
      fi
    # export the pw to make it available for the deploy
    - reset_secure
    # deploy here (don't use travis deploy because it requires homebrew)
    - if [[ $DEPLOY_CONDA == "true" && $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_REPO_SLUG == "Chilipp/psyplot-gui" ]]; then
          ci/deploy_anaconda.py;
      fi
